<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.MaterialComponents.Light.DarkActionBar.Bridge">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

        <!--在这里可以配置所有的Activity的切换动画-->
        <item name="android:windowAnimationStyle">@style/ActivityAnimation</item>
    </style>

    <!-- 使用style方式定义activity切换动画（5.0以前也适用） -->
    <style name="ActivityAnimation">
        <item name="android:activityOpenEnterAnimation">@anim/anim_slide_in_top</item>
        <item name="android:activityOpenExitAnimation">@anim/anim_slide_out_top</item>
        <item name="android:activityCloseEnterAnimation">@anim/anim_slide_in_right</item>
        <item name="android:activityCloseExitAnimation">@anim/anim_slide_out_left</item>
    </style>

    <!--CollapsingToolBarLayout展开后的字体样式-->
    <style name="CollapsingExpandableTextAppearance" parent="TextAppearance.AppCompat.Small">
        <item name="android:textColor">@android:color/white</item>
        <item name="android:textSize">25sp</item>
    </style>

    <!--CollapsingToolBarLayout折叠为ToolBar后的字体样式-->
    <style name="CollapsingCollapsedTextAppearance" parent="@style/TextAppearance.Widget.AppCompat.Toolbar.Title">
        <item name="android:textSize">18sp</item>
        <item name="android:textColor">@android:color/white</item>
    </style>

    <!-- ToolBar的样式  -->
    <style name="ToolBarTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!--toolbar颜色-->
        <item name="android:colorPrimary" tools:targetApi="lollipop">@color/colorAccent</item>
        <!--状态栏颜色-->
        <item name="android:colorPrimaryDark" tools:targetApi="lollipop">@color/colorAccent</item>
        <!--窗口背景颜色-->
        <item name="android:windowBackground">@android:color/white</item>
        <!--悬浮按钮颜色-->
        <item name="colorAccent">@color/colorAccent</item>

    </style>

    <!-- ToolBar子标题字体样式 -->
    <style name="ToolBarSubtitle" parent="@style/TextAppearance.Widget.AppCompat.Toolbar.Subtitle">
        <item name="android:textSize">15sp</item>
        <item name="android:textColor">@android:color/white</item>
    </style>

    <!-- 弹出菜单的样式 -->
    <style name="PopupTheme" parent="@style/ThemeOverlay.AppCompat.Dark">
        <!--菜单的背景色-->
        <item name="android:colorBackground">@color/colorAccent</item>
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>

    <!-- 使菜单位于toolbar之下 -->
    <style name="OverflowMenuStyle" parent="Widget.AppCompat.Light.PopupMenu.Overflow">
        <item name="overlapAnchor">false</item>
    </style>

    <!--transparentText （透明）样式-->
    <style name="transparentText" parent="TextAppearance.AppCompat.Small">
        <item name="android:textColor">#00000000</item>
        <item name="android:textSize">15sp</item>
    </style>


    <!--通过theme给button设置背景，color相当于Button的background，所以xml中不用再设置background-->
    <style name="ButtonTheme">
        <item name="buttonStyle">@style/Widget.AppCompat.Button</item>
        <item name="colorButtonNormal">?attr/colorPrimary</item>
    </style>

    <style name="NoActionBarTheme" parent="AppTheme">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

</resources>
